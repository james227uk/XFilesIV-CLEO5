//========================================================================================================================================================================================================
//------------------------------------------------------------------------------------------- GTA X-Files IV (2024) --------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------- By james227uk -------------------------------------------------------------------------------------------
//========================================================================================================================================================================================================
//                                                                                Developed using Sanny Builder 4 and CLEO5 Beta.
//========================================================================================================================================================================================================


//========================================================================================================================================================================================================
//      1. SCM Header 
//      Core SCM stats such as mission counts, and initial variable declarations.
//========================================================================================================================================================================================================

//--- Primary header
DEFINE MISSIONS 3
DEFINE MISSION 0 AT @Mission_Initial        // 1. Initialisation Script
DEFINE MISSION 1 AT @Mission_Introduction   // 2. Storymode: Introduction
DEFINE MISSION 2 AT @Mission_Arrival        // 3. Storymode: Arrival

DEFINE EXTERNAL_SCRIPTS 6
 // Use -1 in order not to compile AAA script
DEFINE SCRIPT DBGCONS AT @External_DebugConsole
DEFINE SCRIPT HQAGTES AT @External_HQAgentsExterior
DEFINE SCRIPT HQAGTIS AT @External_HQAgentsInterior
DEFINE SCRIPT HQWPNVS AT @External_HQWeaponsVendor
DEFINE SCRIPT HQSETCS AT @External_HQSetpieceCustodian
DEFINE SCRIPT HQSARAS AT @External_HQSarah

DEFINE UNKNOWN_EMPTY_SEGMENT 0
DEFINE UNKNOWN_THREADS_MEMORY 0

//--- Import extensions & libraries
{$USE CLEO}
{$USE CLEO+}
{$USE NewOpcodes}


//--- Initial variable declarations
var 
    $player1: Player         // gta3sc/SBL analogue of PLAYER_CHAR
    $scplayer: Char          // gta3sc/SBL analogue of PLAYER_ACTOR
    $playerGroup: Group
    $playerArea: Int
    $mission_trigger_wait_time: Int = 250
    $flagGamemodeChoice: Int = 0
    $flagMissionInitialCompleted: Int = False
    $flagMissionIntroductionCompleted: Int = False
    $flagMissionArrivalCompleted: Int = False
    $flagFollowerActive: Int = False
    $flagDebugConsoleOpen: Int = False
    $flagDebugMythActive: Int = False
    $flagProsperoHostile: Int = False
    $flagProsperoHQGatesLocked: Int = False
    $flagWeaponsVendorMenuOpen: Int = False
    $flagRelationshipScoreSarah: Int = 0
    $flagIntroducedSarah: Int = False
    $flagGamestage: Int = 0
end
const
    logPath = "root:\modloader\a X-Files IV\XFilesIV.log"
    gmStorymode = 0
    gmFreemode = 1
end

//--- External Script Name Mappings
const
    externalDebugConsole = 0   
    externalHQAgentsExterior = 1
    externalHQAgentsInterior = 2
    externalHQWeaponsVendor = 3
    externalHQSetpieceCustodian = 4
    externalHQSarah = 5             
end

//--- Initial Weapons Vendor weapon Costs
var
    $iWeaponPricePistol:            Int = 0
    $iWeaponPriceSilencedPistol:    Int = 600
    $iWeaponPriceDesertEagle:       Int = 1200
    $iWeaponPriceTec9:              Int = 360
    $iWeaponPriceUzi:               Int = 600
    $iWeaponPriceMP5:               Int = 2000
    $iWeaponPriceAK47:              Int = 4200
    $iWeaponPriceM4:                Int = 5400
    $iWeaponPriceRifle:             Int = 1200
    $iWeaponPriceSniperRifle:       Int = 5000 
    $iWeaponPriceShotgun:           Int = 720
    $iWeaponPriceSawnOff:           Int = 960
    $iWeaponPriceCombatShotgun:     Int = 1200
    $iWeaponPriceRPG:               Int = 10000
    $iWeaponPriceMissileLauncher:   Int = 15000
    $iWeaponPriceFlamethrower:      Int = 10000 
    $iWeaponPriceMinigun:           Int = 20000
    $iWeaponPriceGrenades:          Int = 2000
    $iWeaponPriceSatchels:          Int = 2000
    $iWeaponPriceMolotovs:          Int = 1000
    $iWeaponPriceTearGas:           Int = 1000
    $iWeaponPriceBrassKnuckles:     Int = 100
    $iWeaponPriceNightStick:        Int = 200
    $iWeaponPriceKnife:             Int = 500
    $iWeaponPriceBaseballBat:       Int = 100
    $iWeaponPriceKatana:            Int = 2000
    $iWeaponPriceChainsaw:          Int = 4000
    $iWeaponPriceArmour:            Int = 1000
    $iWeaponPriceCamera:            Int = 5
    $iWeaponPriceNVGoggles:         Int = 10000
    $iWeaponPriceIRGoggles:         Int = 12000
    $iWeaponPriceParachute:         Int = 1000
    $iWeaponPriceJetpack:           Int = 50000
end
script_name 'MAIN'
declare_mission_flag {Name:} $ONMISSION
Fs.DeleteFile(logPath)



//========================================================================================================================================================================================================
//      2. Initialise World
//      Initialise the world and set initial properties such as weather.
//========================================================================================================================================================================================================
Streaming.RequestCollision({X:}2544.1604, {Y:}2810.7729)
Streaming.LoadScene({X:}2544.1604, {Y:}2810.7729, {Z:}10.8203)
Streaming.SetAreaVisible({InteriorID:}0)
Clock.SetTimeOfDay({Hour:}0, {Minutes:}0)
Weather.ForceNow({Weather ID:} WeatherType.RainySf)

Game.SetRelationship(RelationShipType.Respect, PedType.Gang9, PedType.Gang10) // Prospero respects followers
Game.SetRelationship(RelationShipType.Respect, PedType.Gang10, PedType.Gang9) // Followers respect Prospero.



//========================================================================================================================================================================================================
//      3. Initialise Player
//      Create player and set initial stats.
//======================================================================================================================================================================================================== 

//--- Create player
Player.Create({Index:}0, {X:}2544.1604, {Y:}2810.7729, {Z:}10.8203, {Player:} $player1)
Player.GetChar({Player:} $player1, {Player Char:} $scplayer)
Player.GetGroup({Player:} $player1, {Player Group:} $playerGroup)
Player.SetControl({Player:} $player1, {State:} False)

//--- Set player clothes
Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"PLAYER_FACE",    {Model:}"HEAD",    {Body Part:}BodyPart.Head)
Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"JEANSDENIM",     {Model:}"JEANS",   {Body Part:}BodyPart.Legs)
Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"SNEAKERBINCBLK", {Model:}"SNEAKER", {Body Part:}BodyPart.Shoes)
Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"VEST",           {Model:}"VEST",    {Body Part:}BodyPart.Torso)
Player.BuildModel($player1)

//--- Set respawn points
Restart.AddHospital({X:}2027.77, {Y:} -1420.52, {Z:}15.99, {Heading:}137.0, {TownID:} 0)
Restart.AddPolice(  {X:}1550.68, {Y:}-1675.49,  {Z:}14.51, {Heading:}90.0,  {TownID:} 0)

//--- Set initial stats
Stat.SetFloat(StatID.MaxHealth,                     {Value:}1000.0)
Stat.SetFloat(StatID.Respect,                       {Value:}1000.0)
Stat.SetInt  (StatID.DrivingSkill,                  {Value:}10000 )
Stat.SetInt  (StatID.FlyingSkill,                   {Value:}10000 )
Stat.SetInt  (StatID.BikeSkill,                     {Value:}10000 )
Stat.SetInt  (StatID.CycleSkill,                    {Value:}10000 )
Stat.SetFloat(StatID.WeapontypePistolSkill,         {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypePistolSilencedSkill, {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypeDesertEagleSkill,    {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypeShotgunSkill,        {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypeSawnoffShotgunSkill, {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypeSpas12ShotgunSkill,  {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypeMicroUziSkill,       {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypeMp5Skill,            {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypeAk47Skill,           {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypeM4Skill,             {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypeSniperrifleSkill,    {Value:}1000.0)
Stat.SetInt  (StatID.CitiesPassed,                  {Value:}     4)
Player.IncreaseMaxArmor($player1,                   {Value:}  5000)
Player.AddScore        ($player1,                   {Value:} 10000)
Game.SetMaxWantedLevel (                            {Value:}     6)
Char.SetCanBeKnockedOffBike($scplayer, false)
Game.AllowPauseInWidescreen(True)
set_deatharrest_state 0



//========================================================================================================================================================================================================
//      4. Final Initialisation
//      Final initialisation steps, launch the initial 'mission', then create initial threads.
//========================================================================================================================================================================================================

//--- Early Loaders
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|_______] [INFO] Starting early loaders...") 
start_new_script @Debug_DebugConsole
start_new_script @Script_Universal_ProsperoHQ_Gates

//--- Launch the initialisation 'mission'. This contains the main menu etc.
Mission.LoadAndLaunchInternal(Mission_Initial)
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|_______] [INFO] Launching mission 'initial'...")
$ONMISSION = True
while $flagMissionInitialCompleted == False
    wait 0
end
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|_______] [INFO] Returned from mission 'initial'.")

// Pick what to do next based on gamemode choice.
if $flagGamemodeChoice == gmStorymode // Storymode
then
    // Launch Introduction cutscene
    Mission.LoadAndLaunchInternal(Mission_Introduction)
    Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|_______] [INFO] Launching mission 'introduction'...")
    $ONMISSION = True
    while $flagMissionIntroductionCompleted == False
        wait 0
    end
    $ONMISSION = False
    Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|_______] [INFO] Returned from mission 'introduction'.")
    
    // Launch 'Arrival' mission    
    Mission.LoadAndLaunchInternal(Mission_Arrival)
    Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|_______] [INFO] Launching mission 'arrival'...")
    $ONMISSION = True
    while $flagMissionArrivalCompleted == False
        wait 0
    end
    $ONMISSION = False
    Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|_______] [INFO] Returned from mission 'arrival'.")    
else
    // Freemode
    Camera.RestoreJumpcut()
    Player.SetControl($player1, True)
    func_giveAgentOutfit()
    Text.ClearPrints()
    Text.ClearHelp()
    Camera.DoFade(1000, Fade.In)
    Hud.SwitchWidescreen(False)
    Hud.Display(True)
    Char.SetCoordinates($scplayer, 2590.947, 2790.5645, -100.0)
    Char.SetHeading($scplayer, 90.0)
    
    Clock.SetTimeOfDay(12, 0)
    
end   

//--- Create universal scripts
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|_______] [INFO] Starting universal scripts...") 
start_new_script @Script_Universal_HQSavePoint
start_new_script @Script_Universal_ProsperoHQ_MasterLoader
start_new_script @Script_Universal_ProsperoHQ_Agents_External_Loader
start_new_script @Script_Universal_ProsperoHQ_Agents_Interior_Loader
start_new_script @Script_Universal_Anomaly_Mimic
start_new_script @Script_Universal_Anomaly_Chrono

Player.SetControl({Player:} $player1, {State:}True)
Camera.RestoreJumpcut()
Hud.SwitchWidescreen(False)


//========================================================================================================================================================================================================
//      5. Main Loop
//      Keep the MAIN script in a perpetual loop to prevent shenanigans.
//========================================================================================================================================================================================================
while true
    wait $mission_trigger_wait_time
    Clock.GetTimeOfDay({Hours Var:} $TIME_HOURS, {Minutes Var:} $TIME_MINS)
    Char.GetAreaVisible($scplayer, $playerArea)
end


//========================================================================================================================================================================================================
//      6. Universal Scripts
//      Scripts that run in both Storymode and Freemode.
//========================================================================================================================================================================================================

//------------------------------------------------------------------------------------------------------
//      Universal Scripts | Prospero H.Q. | Save Point
//      - Adds a save pickup at Prospero H.Q. by the front door
//------------------------------------------------------------------------------------------------------
:Script_Universal_HQSavePoint
script_name 'HQSAVEP'
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|HQSAVEP] [INFO] Script started.")  
0@ = 2592.0503  // Pickup X
1@ = 2783.4104  // Pickup Y
2@ = 10.9844    // Pickup Z
// 3@: Save Pickup

:Script_Universal_HQSavePoint_Loop
World.ClearArea({Pos3:}0@, 1@, 2@, {Radius:}1.0, {Clear Particles:}True)
Pickup.Create(#PICKUPSAVE, PickupType.Once, {Pos3:}0@, 1@, 2@, {Handle:}3@)
repeat
    wait 100
until Pickup.HasBeenCollected(3@)
$ONMISSION = 1
Player.SetControl($player1, False)
Game.ActivateSaveMenu()

repeat
    wait 100
until Game.HasSaveGameFinished()
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|HQSAVEP] [INFO] Player saved game successfully.") 
Pickup.Remove(3@)

repeat
    wait 100
until Player.IsPlaying($player1)
Camera.RestoreJumpcut()
Camera.SetBehindPlayer()
Player.SetControl($player1, True)
$ONMISSION = 0

repeat
    wait 0
until not Char.LocateAnyMeans2D($scplayer, {Pos2:}0@, 1@, {Radius Pos2:}2.0, 2.0, {Draw Sphere:}False)
jump @Script_Universal_HQSavePoint_Loop
terminate_this_script



//------------------------------------------------------------------------------------------------------
//      Universal Scripts | Prospero H.Q. | Base Gates
//      - Create the base gates and then open/close them based on proximity.
//------------------------------------------------------------------------------------------------------
:Script_Universal_ProsperoHQ_Gates
script_name 'PHQGATE'
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|PHQGATE] [INFO] Script started.")     

// Create gate objects
Streaming.RequestModel(#GATE_AUTOR)
Streaming.RequestModel(#GATE_AUTOL)
Streaming.LoadAllModelsNow()
0@ = Object.Create(#GATE_AUTOL, {Pos3:}2497.41, 2777.07, 9.8)
1@ = Object.Create(#GATE_AUTOR, {Pos3:}2497.41, 2769.11, 9.8)
Object.SetHeading(0@, 90.0)
Object.SetHeading(1@, 90.0)
Object.SetDynamic(0@, True)
Object.SetDynamic(1@, True)
Streaming.MarkModelAsNoLongerNeeded(#GATE_AUTOR)
Streaming.MarkModelAsNoLongerNeeded(#GATE_AUTOL)

// Reduce polling rate until player is within a decent range of the gates.
:Script_Universal_ProsperoHQ_Gates_Loop_FarRange
wait 5000
gosub @Script_Universal_ProsperoHQ_Gates_Lock
if Char.LocateAnyMeans3D($scplayer, {Pos3:}2497.2947, 2773.2153, 10.8262, {Radius Pos3:}200.0, 200.0, 200.0, {Draw Sphere:}False)
jf @Script_Universal_ProsperoHQ_Gates_Loop_FarRange
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|PHQGATE] [INFO] Switched to quicker polling rate.")  

:Script_Universal_ProsperoHQ_Gates_Loop_CloseRange
wait 0
gosub @Script_Universal_ProsperoHQ_Gates_Lock
if and
    $flagFollowerActive == True
    Char.DoesExist($cFollower)
then
    if or
        Char.LocateAnyMeans3D($scplayer, {Pos3:}2497.2947, 2773.2153, 10.8262, {Radius Pos3:}20.0, 20.0, 20.0, {Draw Sphere:}False)
        Char.LocateAnyMeans3D($cFollower, {Pos3:}2497.2947, 2773.2153, 10.8262, {Radius Pos3:}20.0, 20.0, 20.0, {Draw Sphere:}False)
        then gosub @Script_Universal_ProsperoHQ_Gates_Open
        else gosub @Script_Universal_ProsperoHQ_Gates_Close
    end
else
    if Char.LocateAnyMeans3D($scplayer, {Pos3:}2497.2947, 2773.2153, 10.8262, {Radius Pos3:}20.0, 20.0, 20.0, {Draw Sphere:}False)
        then gosub @Script_Universal_ProsperoHQ_Gates_Open
        else gosub @Script_Universal_ProsperoHQ_Gates_Close
    end
end
if not Char.LocateAnyMeans3D($scplayer, {Pos3:}2497.2947, 2773.2153, 10.8262, {Radius Pos3:}200.0, 200.0, 200.0, {Draw Sphere:}False)
    then jump @Script_Universal_ProsperoHQ_Gates_Loop_FarRange
end
jump @Script_Universal_ProsperoHQ_Gates_Loop_CloseRange

:Script_Universal_ProsperoHQ_Gates_Open
Object.Slide(0@, {From Pos3:}2497.41, 2784.77, 9.8, {Speed Pos3:}0.0, 0.1, 0.0, {Collision Check:}False)
Object.Slide(1@, {From Pos3:}2497.41, 2761.41, 9.8, {Speed Pos3:}0.0, 0.1, 0.0, {Collision Check:}False)
return

:Script_Universal_ProsperoHQ_Gates_Close
Object.Slide(0@, {From Pos3:}2497.41, 2777.07, 9.8, {Speed Pos3:}0.0, 0.1, 0.0, {Collision Check:}False)
Object.Slide(1@, {From Pos3:}2497.41, 2769.11, 9.8, {Speed Pos3:}0.0, 0.1, 0.0, {Collision Check:}False)
return

:Script_Universal_ProsperoHQ_Gates_Lock
if $flagProsperoHQGatesLocked == True
then
    repeat 
        wait $mission_trigger_wait_time
    until $flagProsperoHQGatesLocked == False
end
return
terminate_this_script



//------------------------------------------------------------------------------------------------------
//      Universal Scripts | Prospero H.Q. | Master Loader
//      - This script launches Prospero H.Q. interior scripts when the player enters the interior.
//------------------------------------------------------------------------------------------------------
:Script_Universal_ProsperoHQ_MasterLoader
script_name 'HQMASTL'
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|HQMASTL] [INFO] Script started.")  

while true
    wait 0
    if $playerArea == 3
    then
        Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|HQMASTL] [INFO] H.Q. interior entered. Starting subscripts...")  
        start_new_script @Script_Universal_ProsperoHQ_WeaponsVendor_Loader
        start_new_script @Script_Universal_ProsperoHQ_CustodianSetPiece_Loader 
        start_new_script @Script_Universal_ProsperoHQ_Sarah_Loader       
        repeat
            wait 0
        until not $playerArea == 3
    end
end
terminate_this_script
//
//
//
//------------------------------------------------------------------------------------------------------
//      Universal Scripts | Prospero H.Q. | Weapons Vendor Loader
//      - This script launches the weapons vendor menu when the sphere is entered.
//------------------------------------------------------------------------------------------------------
:Script_Universal_ProsperoHQ_WeaponsVendor_Loader
script_name 'HQWPNVL'
// 0@ = Weapons Vendor
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|HQWPNVL] [INFO] Script started.")

while true
    wait $mission_trigger_wait_time
    if $playerArea == 3
    then
        func_runExternalScript(externalHQWeaponsVendor, "External-HQWeaponsVendor")
        repeat
            wait $mission_trigger_wait_time
        until not $playerArea == 3
        Break
    else Break
    end    
end
StreamedScript.MarkAsNoLongerNeeded(externalHQWeaponsVendor)
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|HQWPNVL] [INFO] External script marked no longer needed.")
terminate_this_script
//
//
//
//------------------------------------------------------------------------------------------------------
//      Universal Scripts | Prospero H.Q. | The Custodian (Set Piece) (Loader)
//      - This script spawns The Custodian in his office based on time, with Carter and Davis guarding.
//------------------------------------------------------------------------------------------------------
:Script_Universal_ProsperoHQ_CustodianSetPiece_Loader
script_name 'HQSETCL'
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|HQSETCL] [INFO] Script started.")

while true
    Clock.GetTimeOfDay(0@, 1@)
    wait $mission_trigger_wait_time
    if and
        $ONMISSION == False
        $playerArea == 3
        0@ >= 6
        not 0@ >= 21
    then
        func_runExternalScript(externalHQSetpieceCustodian, "External-HQSetpieceCustodian")
        repeat
            wait 0
        until not $playerArea == 3
        Break
    end
    
    if not $playerArea == 3
    then Break
    end
end
StreamedScript.MarkAsNoLongerNeeded(externalHQSetpieceCustodian)
terminate_this_script
//
//
//
//------------------------------------------------------------------------------------------------------
//      Universal Scripts | Prospero H.Q. | External Agents (Loader)
//      - Creates a random assortmment of agents roaming the H.Q. grounds. Loader script.
//------------------------------------------------------------------------------------------------------
:Script_Universal_ProsperoHQ_Agents_External_Loader
script_name 'HQAGTEL'
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|HQAGTEL] [INFO] Script started.")  

while true
    wait 1000
    if Char.LocateAnyMeans3D($scplayer, {Pos3:}2497.2947, 2773.2153, 10.8262, 300.0, 300.0, 300.0, False)
    then
        func_runExternalScript(externalHQAgentsExterior, "External-HQAgentsExterior")
        repeat
            wait 1000
        until not Char.LocateAnyMeans3D($scplayer, {Pos3:}2497.2947, 2773.2153, 10.8262, 300.0, 300.0, 300.0, False) 
        Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|HQAGTEL] [INFO] Script ended. Restarting loader script.")
        StreamedScript.MarkAsNoLongerNeeded(externalHQAgentsExterior)
    end
end
terminate_this_script
//
//
//
//------------------------------------------------------------------------------------------------------
//      Universal Scripts | Prospero H.Q. | Interior Agents (Loader)
//      - Creates a random assortmment of agents roaming the H.Q. interior. Loader script.
//------------------------------------------------------------------------------------------------------
:Script_Universal_ProsperoHQ_Agents_Interior_Loader
script_name 'HQAGTIL'
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|HQAGTIL] [INFO] Script started.")  

while true
    wait 1000
    if $playerArea == 3
    then 
        func_runExternalScript(externalHQAgentsInterior, "External-HQAgentsInterior")
        repeat
            wait 1000
            Char.GetAreaVisible($scplayer, 0@)
        until not $playerArea == 3
        Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|HQAGTIL] [INFO] Script ended. Restarting loader script.")
        StreamedScript.MarkAsNoLongerNeeded(externalHQAgentsInterior)       
    end
end
terminate_this_script
//
//
//
//------------------------------------------------------------------------------------------------------
//      Universal Scripts | Prospero H.Q. | Sarah (Loader)
//      - Creates Sarah in the H.Q. behind the desk.
//------------------------------------------------------------------------------------------------------
:Script_Universal_ProsperoHQ_Sarah_Loader
script_name 'HQSARAL'
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|HQSARAL] [INFO] Script started.")  

while true
    wait 0
    if $playerArea == 3
    then 
        func_runExternalScript(externalHQSarah, "External-HQSarah")
        repeat
            wait 1000
            Char.GetAreaVisible($scplayer, 0@)
        until not $playerArea == 3
        Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|HQSARAL] [INFO] Script ended. Restarting loader script.")
        StreamedScript.MarkAsNoLongerNeeded(externalHQSarah)       
    end
end
terminate_this_script



//------------------------------------------------------------------------------------------------------
//      Universal Scripts | Anomalies | Mimic
//      - Mimic
//------------------------------------------------------------------------------------------------------
:Script_Universal_Anomaly_Mimic
script_name 'ANOMMMC'
// 0@: Mimic Object
// 1@: Target Char
// 2@: Target Char Model
// 3@: Mimic Equipped
// 4@: Model Active
// 5@: Transform FX Particle
// 6@: Player X
// 7@: Player Y
// 8@: Player Z
3@ = 0

repeat
    wait 0
until Pad.TestCheat("MIMIC")
Streaming.RequestModel(2976)
Streaming.LoadAllModelsNow()
0@ = Object.Create(2976, 0.0, 0.0, 0.0)
Object.SetScale(0@, 0.01)
Task.PickUpObject({Char:} $scplayer, {Object:}0@, {Offset Pos3:}0.0, 0.0, 0.0, {BoneID:}6, {Unknown}16, {Anim Name:}"NULL", {Anim File:}"NULL", {Duration:}-1)

Object.SetCollision(0@, False)
Object.SetModelAlpha(0@, 0) 
Text.PrintStringNow("Mimic obtained!", 3000)
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|ANOMMMC] [INFO] Obtained")


:Script_Universal_Anomaly_Mimic_Loop
while true
    wait 0
    if Pad.IsKeyPressed(KeyCode.Y)
    then
        if 3@ == 0
        then
            Object.SetModelAlpha(0@, 255) 
            3@ = 1
            Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|ANOMMMC] [INFO] Now holding")
        else
            Object.SetModelAlpha(0@, 0)
            3@ = 0
            Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|ANOMMMC] [INFO] Now put away")
        end
        wait 1000
    end    
    
    if and
        Pad.IsKeyPressed(KeyCode.U)
        3@ == 1
    then
        if 4@ == 0
        then
            Player.GetCharIsTargeting($player1, 1@)
            if Char.DoesExist(1@)
            then
                Text.PrintStringNow("Switch Successful", 1000)
                Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|ANOMMMC] [INFO] Switching model")
                Char.GetModel(1@, 2@)
                Streaming.RequestModel(2@)
                Streaming.LoadAllModelsNow()
                Player.SetModel($player1, 2@)
                Char.MarkAsNoLongerNeeded(1@)
                Streaming.MarkModelAsNoLongerNeeded(2@)
                gosub @Script_Universal_Anomaly_Mimic_Effect
                4@ = 1      
            else
                Text.PrintStringNow("Switch Failed", 1000)
                Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|ANOMMMC] [INFO] Model switch failed")
            end
        else
            Text.PrintStringNow("Switched back", 1000)
            Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|ANOMMMC] [INFO] Switched model back")
            Player.SetModel($player1, #NULL)
            gosub @Script_Universal_Anomaly_Mimic_Effect
            4@ = 0
        end
        wait 1000    
    end 
end
terminate_this_script

:Script_Universal_Anomaly_Mimic_Effect
Char.GetCoordinates($scplayer, {Pos3:}6@, 7@, 8@)
5@ = Particle.Create("CAMFLASH", {Pos3:}6@, 7@, 8@, {Ignore Bounding Checks:}True)
Particle.Play(5@)
wait 1000
Particle.Kill(5@)
return



//------------------------------------------------------------------------------------------------------
//      Universal Scripts | Anomalies | Chrono
//      - Chrono
//------------------------------------------------------------------------------------------------------
:Script_Universal_Anomaly_Chrono
script_name 'ANOMCHR'
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|ANOMCHR] [INFO] Script started.") 
1@ = 0 // Held
2@ = 0 // Active

while true
    wait 0
    if Pad.TestCheat("CHRONO")
    then
        Streaming.RequestModel(2976)
        Streaming.LoadAllModelsNow()
        0@ = Object.Create(2976, 0.0, 0.0, 0.0)
        Object.SetScale(0@, 0.01)
        Task.PickUpObject({Char:} $scplayer, {Object:}0@, {Offset Pos3:}0.0, 0.0, 0.0, {BoneID:}6, {Unknown}16, {Anim Name:}"NULL", {Anim File:}"NULL", {Duration:}-1)
        
        while true
            wait 0
            if and
                Pad.IsKeyPressed(KeyCode.U)
                1@ == 1
            then
                repeat
                    wait 0
                until not Pad.IsKeyPressed(KeyCode.U)
                if 2@ == 0
                then
                    Clock.SetTimeScale(0.5)
                    2@ = 1
                    // slow down
                else
                    Clock.SetTimeScale(1.0)
                   // speed up
                   2@ = 0 
                end
            end
            
            if Pad.IsKeyPressed(KeyCode.Y)
            then
                repeat
                    wait 0
                until not Pad.IsKeyPressed(KeyCode.Y)
                if 1@ == 0
                then
                    Object.SetModelAlpha(0@, 255)
                    1@ = 1    
                else
                    Object.SetModelAlpha(0@, 0)
                    1@ = 0 
                end
            end
        end
    end              
end  



//------------------------------------------------------------------------------------------------------
//      Universal Scripts | Debug | Debug Console
//      - A debug development console containing useful tools and readouts.
//------------------------------------------------------------------------------------------------------

:Debug_DebugConsole
script_name 'DBGCONL' 
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|DBGCONL] [INFO] Script started.")  

while true
    wait 0
    if Pad.IsKeyPressed(KeyCode.F6)
    then
        while Pad.IsKeyPressed(KeyCode.F6)
            wait 0
        end 
        func_runExternalScript(externalDebugConsole, "External-DebugConsole")
    end
    
    while $flagDebugConsoleOpen == True
        wait 0
    end
    StreamedScript.MarkAsNoLongerNeeded(externalDebugConsole)
end
terminate_this_script



//------------------------------------------------------------------------------------------------------
//      Universal Scripts | Debug | Debug Follower
//      - A quick and dirty follower script to test interactions with other scripts.
//------------------------------------------------------------------------------------------------------
:Debug_Follower
script_name 'DBGFLWR'
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|DBGFLWR] [INFO] Script started.")  
{   -- Var Mapping --
    0@: Player X
    1@: Player Y
    2@: Player Z
    3@: Proximity Radius
    4@: Blip
}
3@ = 150.0

Streaming.RequestModel(#WFYST)
Streaming.RequestModel(#M4)
Streaming.LoadAllModelsNow()
Char.GetOffsetInWorldCoords($scplayer, 5.0, 0.0, 0.0, 0@, 1@, 2@)
Char $cFollower = Char.Create(PedType.Gang10, #WFYST, 0@, 1@, -100.0)
Char.GiveWeapon($cFollower, 31, 99999)
Char.ShutUp($cFollower, True)
Char.SetSuffersCriticalHits($cFollower, False)
Char.SetProofs($cFollower, True, True, True, True, True)
Group.SetMember($playerGroup, $cFollower)
Char.SetNeverLeavesGroup($cFollower, True)
Char.SetRelationship($cFollower, RelationshipType.Respect, PedType.Player1)
Char.SetRelationship($cFollower, RelationshipType.Like, PedType.Gang9) // Prospero
Char.SetRelationship($cFollower, RelationshipType.Hate, PedType.Gang8) // Myths
$flagFollowerActive = True
Streaming.MarkModelAsNoLongerNeeded(#WFYST)
Streaming.MarkModelAsNoLongerNeeded(#M4)
Blip.AddForChar($cFollower, 4@)
Blip.SetAsFriendly(4@, True)
Blip.SetAlwaysDisplayOnZoomedRadar(4@, True)
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|DBGFLWR] [INFO] Spawned debug follower.") 

:Debug_Follower_Loop
wait 0
if or
    Player.IsDead($player1)
    Pad.TestCheat("FOLLOW")
then
    Char.RemoveElegantly($cFollower)
    Char.MarkAsNoLongerNeeded($cFollower)
    Blip.Remove(4@)
    wait 1000
    $flagFollowerActive = False
    Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|DBGFLWR] [INFO] Removed debug follower.") 
    terminate_this_script
end

if not Char.LocateAnyMeansChar3D($cFollower, $scplayer, 3@, 3@, 3@, False)
then
    Char.GetOffsetInWorldCoords($scplayer, 5.0, 0.0, 0.0, 0@, 1@, 2@)
    Char.SetCoordinates($cFollower, 0@, 1@, -100.0)
end
jump @Debug_Follower_Loop
terminate_this_script



//------------------------------------------------------------------------------------------------------
//      Universal Scripts | Debug | Debug Myth
//      - A quick and dirty myth script to test interactions with other scripts.
//------------------------------------------------------------------------------------------------------
:Debug_Myth
script_name 'DBGMYTH'
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|DBGMYTH] [INFO] Script started.")  
{   -- Var Mapping --
    0@: Player X
    1@: Player Y
    2@: Player Z
    3@: Myth
    4@: Blip
}
Char.GetOffsetInWorldCoords($scplayer, 5.0, 0.0, 0.0, 0@, 1@, 2@)
Streaming.LoadSpecialCharacter(1, "BIGFOOT")
Streaming.LoadAllModelsNow()
wait 0
Char.Create(PedType.Gang8, #SPECIAL01, 0@, 1@, 2@, 3@)
func_applyMythTemplate(3@)
Task.KillCharOnFoot(3@, $scplayer)
Char.SetAnimGroup(3@, "oldman")
Char.SetDecisionMaker(3@, 2)
Char.SetRelationship(3@, RelationShipType.Hate, PedType.Player1)
Char.SetRelationship(3@, RelationShipType.Hate, PedType.Gang9) // Prospero
Char.SetRelationship(3@, RelationShipType.Hate, PedType.Gang10) // Followers
$flagDebugMythActive = True
Streaming.UnloadSpecialCharacter(1)
Blip.AddForChar(3@, 4@)
Blip.SetAsFriendly(4@, False)
Blip.SetAlwaysDisplayOnZoomedRadar(4@, True)
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|DBGMYTH] [INFO] Spawned debug myth.") 

:Debug_Myth_Loop
wait 0
if or
    Char.IsDead(3@)
    not Char.LocateAnyMeansChar2D($scplayer, 3@, 500.0, 500.0, False)
    Pad.TestCheat("MYTH")
then
    Char.RemoveElegantly(3@)
    Char.MarkAsNoLongerNeeded(3@)
    Blip.Remove(4@)
    wait 1000
    $flagDebugMythActive = False
    Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Main|DBGMYTH] [INFO] Removed debug myth.") 
    terminate_this_script
else
    jump @Debug_Myth_Loop
end
terminate_this_script

    



//========================================================================================================================================================================================================
//      7. Storymode Scripts
//      Scripts that run exc lusively in Storymode.
//========================================================================================================================================================================================================

 

//========================================================================================================================================================================================================
//      8. Freemode Scripts
//      Scripts that run exclusively in Freemode.
//========================================================================================================================================================================================================



//========================================================================================================================================================================================================
//      9. Functions
//      Custom functions called extensively to reduce code bloat.
//========================================================================================================================================================================================================

//------------------------------------------------------------------------------------------------------
//      Functions | Run External Script
//      - This function streams an external script, waits for it to be loaded, then starts it safely.
//------------------------------------------------------------------------------------------------------
function func_runExternalScript(targetScript: int, name: string)
    int scriptCount = StreamedScript.GetNumberOfInstances(targetScript)
    if scriptCount == 0
    then
        StreamedScript.Stream(targetScript)
        while not StreamedScript.HasLoaded(targetScript)
            wait 0
        end
        StreamedScript.StartNew(targetScript)
        Debugger.LogLine({Filename:}logPath, {Timestamp:}True, {Text:}"[Main|_______] [INFO] Began external script '%s'.", name)
    else Debugger.LogLine({Filename:}logPath, {Timestamp:}True, {Text:}"[Main|_______] [ERROR] Failed to start external script '%s'. Active instances already %i.", name, scriptCount)
    end
end



//------------------------------------------------------------------------------------------------------
//      Functions | Load Model
//      - This function streams a model, waits for it to be loaded, then returns.
//------------------------------------------------------------------------------------------------------
function func_loadModel(modelID: int, forceLoad: int)
    Streaming.RequestModel(modelID)
    if forceLoad == 1
    then
        Streaming.LoadAllModelsNow()
        return
    else
        while not Streaming.IsModelAvailable(modelID)
            wait 0
        end
    end
end


//------------------------------------------------------------------------------------------------------
//      Functions | Teleport Player Safely
//      - This function teleports the player safely to the target coordinates, requesting collision beforehand.
//------------------------------------------------------------------------------------------------------
function func_teleportSafe(posX: float, posY: float, heading: float, area: int)
    Streaming.SetAreaVisible(area)
    Char.SetAreaVisible($scplayer, area)
    Char.SetCoordinates($scplayer, posX, posY, 0.0)
    Streaming.RequestCollision(posX, posY)
    Streaming.LoadAllModelsNow()
    wait 0
    
    // put on loaded ground
    Char.SetCoordinates($scplayer, posX, posY, -100.0)
    Char.SetHeading($scplayer, heading)
    
    float posZ
    //Player is already at the waypoint
    Char.GetCoordinates($scplayer, posX, posY, posZ)
    //We're loading the scene
    Streaming.LoadScene(posX, posY, posZ)
    Streaming.LoadAllModelsNow()
end



//------------------------------------------------------------------------------------------------------
//      Functions | Equip Agent Outfit
//      - This function puts CJ in his agent outfit.
//------------------------------------------------------------------------------------------------------
function func_giveAgentOutfit()
    Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"Player_Face",   {Model:}"HEAD",      {Body Part:}BodyPart.Head)
    Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"Tuxedo",        {Model:}"Suit2",     {Body Part:}BodyPart.Torso)
    Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"Suit1TrBlk2",   {Model:}"Suit1Tr",   {Body Part:}BodyPart.Legs)
    Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"ShoeDressBlk",  {Model:}"Shoe",      {Body Part:}BodyPart.Shoes)
    Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"WatchCro2",     {Model:}"Watch",     {Body Part:}14)
    Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"Glasses05Dark", {Model:}"Glasses03", {Body Part:}BodyPart.Glasses)
    Player.BuildModel($player1)
end



//------------------------------------------------------------------------------------------------------
//      Functions | Equip Casual Outfit
//      - This function puts CJ in his normal casual outfit.
//------------------------------------------------------------------------------------------------------
function func_giveCasualOutfit()
    Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"Player_Face",    {Model:}"HEAD",   {Body Part:}BodyPart.Head)
    Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"Tshirtmaddgrey", {Model:}"Tshirt", {Body Part:}BodyPart.Torso)
    Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"Worktrgrey",     {Model:}"Worktr", {Body Part:}BodyPart.Legs)
    Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"ShoeDressBlk",   {Model:}"Shoe",   {Body Part:}BodyPart.Shoes)
    Player.GiveClothes           ({Player:} $player1, {Texture:}0,                {Model:}0,        {Body Part:}14)
    Player.GiveClothes           ({Player:} $player1, {Texture:}0,                {Model:}0,        {Body Part:}BodyPart.Glasses)
    Player.BuildModel($player1)
end



//------------------------------------------------------------------------------------------------------
//      Functions | Give Weapon Safely
//      - This function loads the model before giving the weapon to the specified Char.
//------------------------------------------------------------------------------------------------------
function func_giveWeaponSafely(targetChar: Char, weaponID: int, ammo: int)
    Int modelID = Weapon.GetModel(weaponID)
    Streaming.RequestModel(modelID)
    Streaming.LoadAllModelsNow()
    Char.GiveWeapon(targetChar, weaponID, ammo)
    Char.SetCurrentWeapon(targetChar, weaponID)
    Streaming.MarkModelAsNoLongerNeeded(modelID)
end



//------------------------------------------------------------------------------------------------------
//      Functions | Play SCM Sound Safely
//      - This function safely loads and then plays an SCM sound.
//------------------------------------------------------------------------------------------------------
function func_playSoundSafely(slotID: int, soundID: int, waitUntilFinished: int)
    Audio.LoadMissionAudio(slotID, soundID)
    repeat
        wait 0
    until Audio.HasMissionAudioLoaded(slotID)
    Audio.PlayMissionAudio(slotID)
    
    if waitUntilFinished == False
    then
        return
    else 
        repeat
            wait 0
        until Audio.HasMissionAudioFinished(slotID)
    end
end



//------------------------------------------------------------------------------------------------------
//      Functions | Load AudioStream safely.
//      - This function requests an AudioStream and check's its loaded before playing.
//------------------------------------------------------------------------------------------------------
function func_playAudioStreamSafely(streamID: AudioStream, soundPath: string, waitUntilFinished: int)
    repeat
        wait 0
    until streamID = AudioStream.Load(soundPath)
    AudioStream.SetState(streamID, AudioStreamAction.Play)
    
    if waitUntilFinished == False
    then
        return
    else
        repeat
            wait 0
        until not AudioStream.IsPlaying(streamID)
    end
end



//------------------------------------------------------------------------------------------------------
//      Functions | Play Dialogue
//      - 
//------------------------------------------------------------------------------------------------------
function func_playDialogue(mode: int, asPath: string, scmSoundID: int, subID: string, doAnims: int, forChar: Char, waitUntilFinished: int, extraWaitTime: int)
int streamLength = 0
int subtitleDisplayTime = 0
AudioStream streamID

    if mode == 0 // AudioStream mode.
    then
        repeat
            wait 0
        until AudioStream.Load(asPath, streamID)
        AudioStream.GetLength(streamID, streamLength)
        streamLength *= 1000
        streamLength += 1000
        AudioStream.SetState(streamID, AudioStreamAction.Play)
        if Game.AreSubtitlesSwitchedOn()
        then
            Text.PrintNow(subID, streamLength, 1)
        end  
        
        if doAnims == True
        then
            Task.PlayAnim({Char:}forChar, {Anim Name:}"idle_chat", {Anim File:}"ped", {Speed:}4.0, {Loop:}False, {LockX:}False, {LockY:}False, {Freeze Frame:}False, {Duration:}streamLength)
            Char.StartFacialTalk(forChar, 10)
        end
        
        if waitUntilFinished == True
        then
            repeat
                wait 0
            until not AudioStream.IsPlaying(streamID)
            if Char.DoesExist(forChar)
            then Char.StopFacialTalk(forChar)
            end
            extraWaitTime += 500
            wait extraWaitTime
        end
        AudioStream.Remove(streamID) 
    end
end



//------------------------------------------------------------------------------------------------------
//      Functions | Clear Camera Vector
//      - This function clears stubborn camera vector movements.
//------------------------------------------------------------------------------------------------------
function func_clearCameraVector()
    float cameraX, cameraY, cameraZ
    Camera.GetActiveCoordinates(cameraX, cameraY, cameraZ)
    Camera.SetVectorMove(cameraX, cameraY, cameraZ, cameraX, cameraY, cameraZ, 0, False)
    Camera.SetVectorTrack(cameraX, cameraY, cameraZ, cameraX, cameraY, cameraZ, 0, False)
end



//------------------------------------------------------------------------------------------------------
//      Functions | Restore Camera
//      - This function resets the camera from cutscene mode back to normal mode
//------------------------------------------------------------------------------------------------------
function func_restoreCamera()
    Camera.ResetNewScriptables()
    Camera.RestoreJumpcut()
    Camera.DoFade(0, Fade.In)
    Hud.SwitchWidescreen(False)
    Text.ClearThisPrintBigNow(TextStyle.BottomRight)
end



//------------------------------------------------------------------------------------------------------
//      Functions | Basic Myth Setup
//      - This function applies 'core' properties to myths. Override and extend as required.
//------------------------------------------------------------------------------------------------------
function func_applyMythTemplate(mythChar: Char)
    mythChar.SetDropsWeaponsWhenDead(False)
    mythChar.SetSuffersCriticalHits(False)
    mythChar.SetHealth(20000)
    mythChar.SetMoney(0)
    mythChar.SetUsesUpperbodyDamageAnimsOnly(True)
    mythChar.ShutUp(True)
    mythChar.SetDrownsInWater(False)
    mythChar.SetDecisionMaker(2)
    mythChar.SetRelationship(4, 0)  // Myth hates player
    mythChar.SetRelationship(4, 16) // Myth hates GANG10 (Followers, Prospero etc)
end



//------------------------------------------------------------------------------------------------------
//      Functions | Spawn In Car
//      - This function spawns a car and puts the player in the driver seat. Output handle is returned.
//------------------------------------------------------------------------------------------------------
function func_spawnInCar(targetChar: Char, carModel: Int): int
    float posX, posY, posZ   
    
    Streaming.RequestModel(carModel)
    Streaming.LoadAllModelsNow()
    Char.GetCoordinates(targetChar, {Pos3:}posX, posY, posZ)
    Path.GetClosestCarNode({Input Pos3:}posX, posY, posZ, {Output Pos3:}posX, posY, posZ)
    
    Car c = Car.Create(carModel, {Pos3:}posX, posY, posZ)
    Char.WarpIntoCar(targetChar, c)
    return c
end



//------------------------------------------------------------------------------------------------------
//      Functions | Menu Stall
//      - This function stalls a menu until the input key is released.
//------------------------------------------------------------------------------------------------------
function func_stallMenu(mode: Int)
    Switch mode
        Case 0 // Stall confirm (Sprint)
            while Pad.IsButtonPressed({Pad:}PadID.Pad1, {Button:}Button.Cross) // Sprint
                wait 0
            end
        
        Case 1 // Stall backing out (Return/Backspace)
            repeat
                wait 0
                if and
                    not Pad.IsKeyPressed(KeyCode.Return)
                    not Pad.IsKeyPressed(KeyCode.Back)
                then
                    Break
                end
            until False  
    end      
end



//========================================================================================================================================================================================================
//      10. Missions
//      All missions go here. They are only loaded into memory when called.
//========================================================================================================================================================================================================

//------------------------------------------------------------------------------------------------------
//      Missions | Mission 0: Initial
//      - Initialisation 'mission' which has the main menu etc.
//------------------------------------------------------------------------------------------------------
:Mission_Initial
{$INCLUDE_ONCE main\missions\Mission-Initial.txt}

//------------------------------------------------------------------------------------------------------
//      Missions | Mission 1: Introduction
//      - Intro cinematic where the Bloodpool opens and CJ is at the bar.
//------------------------------------------------------------------------------------------------------
:Mission_Introduction
{$INCLUDE_ONCE main\missions\Mission-Introduction.txt}

//------------------------------------------------------------------------------------------------------
//      Missions | Mission 2: Arrival
//      - CJ goes to Prospero H.Q. and is given his first task.
//------------------------------------------------------------------------------------------------------
:Mission_Arrival
{$INCLUDE_ONCE main\missions\Mission-Arrival.txt}





//========================================================================================================================================================================================================
//      11. External Scripts
//      All external scripts go here. They are only loaded into memory when called.
//========================================================================================================================================================================================================

//------------------------------------------------------------------------------------------------------
//      External Scripts | 0 | Debug Console
//      - A debug developer console containing useful tools and readouts.
//------------------------------------------------------------------------------------------------------
:External_DebugConsole
{$INCLUDE_ONCE main\externals\External-DebugConsole.txt}



//------------------------------------------------------------------------------------------------------
//      External Scripts | 1 | Agents: Exterior
//      - Spawns a random assortment of agents around Prospero H.Q.'s exterior.
//------------------------------------------------------------------------------------------------------
:External_HQAgentsExterior
{$INCLUDE_ONCE main\externals\External-HQAgentsExterior.txt}



//------------------------------------------------------------------------------------------------------
//      External Scripts | 2 | Agents: Interior
//      - Spawns a random assortment of agents inside Prospero H.Q.'s exterior.
//------------------------------------------------------------------------------------------------------
:External_HQAgentsInterior
{$INCLUDE_ONCE main\externals\External-HQAgentsInterior.txt}


//------------------------------------------------------------------------------------------------------
//      External Scripts | 3 | HQ Weapons Vendor
//      - Creates the weapons purchase menu.
//------------------------------------------------------------------------------------------------------
:External_HQWeaponsVendor
{$INCLUDE_ONCE main\externals\External-HQWeaponsVendor.txt}



//------------------------------------------------------------------------------------------------------
//      External Scripts | 4 | HQ Setpiece Custodian
//      - Makes The Custodian, Carter, and Davis appear at his office between the hours of 6am - 9pm.
//------------------------------------------------------------------------------------------------------
:External_HQSetpieceCustodian
{$INCLUDE_ONCE main\externals\External-HQSetpieceCustodian.txt}



//------------------------------------------------------------------------------------------------------
//      External Scripts | 5 | HQ Sarah
//      - 
//------------------------------------------------------------------------------------------------------
:External_HQSarah
{$INCLUDE_ONCE main\externals\External-HQSarah.txt}