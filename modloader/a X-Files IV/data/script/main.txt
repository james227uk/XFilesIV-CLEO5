//========================================================================================================================================================================================================
//------------------------------------------------------------------------------------------- GTA X-Files IV (2024) --------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------- By james227uk -------------------------------------------------------------------------------------------
//========================================================================================================================================================================================================
//                                                                                Developed using Sanny Builder 4 and CLEO5 Beta.
//========================================================================================================================================================================================================


//========================================================================================================================================================================================================
//      1. SCM Header 
//      Core SCM stats such as mission counts, and initial variable declarations.
//========================================================================================================================================================================================================

//--- Primary header
DEFINE MISSIONS 3
DEFINE MISSION 0 AT @Mission_Initial        // 1. Initialisation Script
DEFINE MISSION 1 AT @Mission_Introduction   // 2. Storymode: Introduction
DEFINE MISSION 2 AT @Mission_Arrival        // 3. Storymode: Arrival

DEFINE EXTERNAL_SCRIPTS 2 // Use -1 in order not to compile AAA script
DEFINE SCRIPT DBGCAMS AT @External_CameraHelper
DEFINE SCRIPT DBGCONS AT @External_DebugConsole

DEFINE UNKNOWN_EMPTY_SEGMENT 0
DEFINE UNKNOWN_THREADS_MEMORY 0

//--- Import extensions & libraries
{$USE CLEO}
{$USE CLEO+}
{$USE NewOpcodes}


//--- Initial variable declarations
var 
    $player1: Player         // gta3sc/SBL analogue of PLAYER_CHAR
    $scplayer: Char          // gta3sc/SBL analogue of PLAYER_ACTOR
    $playerGroup: Group
    $mission_trigger_wait_time: Int = 250
    $flagGamemodeChoice: Int = 0
    $flagMissionInitialCompleted: Int = False
    $flagMissionIntroductionCompleted: Int = False
    $flagMissionArrivalCompleted: Int = False
    $flagDebugConsoleOpen: Int = 0
    $flagProsperoHQGatesLocked: Int = False
    $flagFollowerActive: Int = False
end
const
    logPath = "root:\modloader\a X-Files IV\XFilesIV.log"
    On = 1
    Off = 0
    gmStorymode = 0
    gmFreemode = 1
end

//--- External Script Name Mappings
const
    externalCameraHelper = 0
    externalDebugConsole = 1    
end

script_name 'MAIN'
declare_mission_flag {Name:} $ONMISSION
Fs.DeleteFile(logPath)



//========================================================================================================================================================================================================
//      2. Initialise World
//      Initialise the world and set initial properties such as weather.
//========================================================================================================================================================================================================
Streaming.RequestCollision({X:}2544.1604, {Y:}2810.7729)
Streaming.LoadScene({X:}2544.1604, {Y:}2810.7729, {Z:}10.8203)
Streaming.SetAreaVisible({InteriorID:}0)
Clock.SetTimeOfDay({Hour:}0, {Minutes:}0)
Weather.ForceNow({Weather ID:} WeatherType.RainySf)



//========================================================================================================================================================================================================
//      3. Initialise Player
//      Create player and set initial stats.
//======================================================================================================================================================================================================== 

//--- Create player
Player.Create({Index:}0, {X:}2544.1604, {Y:}2810.7729, {Z:}10.8203, {Player:} $player1)
Player.GetChar({Player:} $player1, {Player Char:} $scplayer)
Player.GetGroup({Player:} $player1, {Player Group:} $playerGroup)
Player.SetControl({Player:} $player1, {State:} False)

//--- Set player clothes
Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"PLAYER_FACE",    {Model:}"HEAD",    {Body Part:}BodyPart.Head)
Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"JEANSDENIM",     {Model:}"JEANS",   {Body Part:}BodyPart.Legs)
Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"SNEAKERBINCBLK", {Model:}"SNEAKER", {Body Part:}BodyPart.Shoes)
Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"VEST",           {Model:}"VEST",    {Body Part:}BodyPart.Torso)
Player.BuildModel($player1)

//--- Set respawn points
Restart.AddHospital({X:}2027.77, {Y:} -1420.52, {Z:}15.99, {Heading:}137.0, {TownID:} 0)
Restart.AddPolice(  {X:}1550.68, {Y:}-1675.49,  {Z:}14.51, {Heading:}90.0,  {TownID:} 0)

//--- Set initial stats
Stat.SetFloat(StatID.MaxHealth,                     {Value:}1000.0)
Stat.SetInt  (StatID.DrivingSkill,                  {Value:}10000 )
Stat.SetInt  (StatID.FlyingSkill,                   {Value:}10000 )
Stat.SetInt  (StatID.BikeSkill,                     {Value:}10000 )
Stat.SetInt  (StatID.CycleSkill,                    {Value:}10000 )
Stat.SetFloat(StatID.WeapontypePistolSkill,         {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypePistolSilencedSkill, {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypeDesertEagleSkill,    {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypeShotgunSkill,        {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypeSawnoffShotgunSkill, {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypeSpas12ShotgunSkill,  {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypeMicroUziSkill,       {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypeMp5Skill,            {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypeAk47Skill,           {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypeM4Skill,             {Value:}1000.0)
Stat.SetFloat(StatID.WeapontypeSniperrifleSkill,    {Value:}1000.0)
Stat.SetInt  (StatID.CitiesPassed,                  {Value:}     4)
Player.IncreaseMaxArmor($player1,                   {Value:}  5000)
Player.AddScore        ($player1,                   {Value:}  5000)
Game.SetMaxWantedLevel (                            {Value:}     6)
Char.SetCanBeKnockedOffBike($scplayer, false)

Game.AllowPauseInWidescreen(True)
set_deatharrest_state 0



//========================================================================================================================================================================================================
//      4. Final Initialisation
//      Final initialisation steps, launch the initial 'mission', then create initial threads.
//========================================================================================================================================================================================================
wait 0
start_new_script @Debug_CameraHelper
start_new_script @Debug_DebugConsole
//--- Launch the initialisation 'mission'. This contains the main menu etc.
Mission.LoadAndLaunchInternal(Mission_Initial)
Debugger.LogLine({Filename:}logPath, {Timestamp:}True, {Text:}"[Main] [INFO] Launching mission 'initial'...")
$ONMISSION = True
while $flagMissionInitialCompleted == False
    wait 0
end
Debugger.LogLine({Filename:}logPath, {Timestamp:}True, {Text:}"[Main] [INFO] Returned from mission 'initial'.")

// Pick what to do next based on gamemode choice.
if $flagGamemodeChoice == gmStorymode // Storymode
then
    // Launch Introduction cutscene
    wait 0
    Mission.LoadAndLaunchInternal(Mission_Introduction)
    Debugger.LogLine({Filename:}logPath, {Timestamp:}True, {Text:}"[Main] [INFO] Launching mission 'introduction'...")
    $ONMISSION = True
    while $flagMissionIntroductionCompleted == False
        wait 0
    end
    $ONMISSION = False
    Debugger.LogLine({Filename:}logPath, {Timestamp:}True, {Text:}"[Main] [INFO] Returned from mission 'introduction'.")
    
    // Launch 'Arrival' mission    
    wait 0
    Mission.LoadAndLaunchInternal(Mission_Arrival)
    Debugger.LogLine({Filename:}logPath, {Timestamp:}True, {Text:}"[Main] [INFO] Launching mission 'arrival'...")
    $ONMISSION = True
    while $flagMissionArrivalCompleted == False
        wait 0
    end
    $ONMISSION = False
    Debugger.LogLine({Filename:}logPath, {Timestamp:}True, {Text:}"[Main] [INFO] Returned from mission 'arrrival'.")    
else
    // Freemode
    Camera.RestoreJumpcut()
    Player.SetControl($player1, True)
    func_giveAgentOutfit()
    Camera.DoFade(1000, Fade.In)
    Hud.SwitchWidescreen(False)
end   
//Audio.PlayMissionPassedTune(2) // Debug

//--- Create universal scripts
start_new_script @Script_Universal_ProsperoHQ_Gates

Player.SetControl({Player:} $player1, {State:} True)
Camera.RestoreJumpcut()
Hud.SwitchWidescreen(False)


//========================================================================================================================================================================================================
//      5. Main Loop
//      Keep the MAIN script in a perpetual loop to prevent shenanigans.
//========================================================================================================================================================================================================
while true
    wait $mission_trigger_wait_time
    Clock.GetTimeOfDay({Hours Var:} $TIME_HOURS, {Minutes Var:} $TIME_MINS)
end


//========================================================================================================================================================================================================
//      6. Universal Scripts
//      Scripts that run in both Storymode and Freemode.
//========================================================================================================================================================================================================

//------------------------------------------------------------------------------------------------------
//      Universal Scripts | Prospero H.Q. | Base Gates
//      - Create the base gates and then open/close them based on proximity.
//------------------------------------------------------------------------------------------------------
:Script_Universal_ProsperoHQ_Gates
script_name 'PHQGATE'
Debugger.LogLine({Filename:}logPath, {Timestamp:}True, {Text:}"[PHQGATE] [INFO] Universal script 'Prospero H.Q. Gates' loaded at 'PHQGATE'.")    

// Create gate objects
Streaming.RequestModel(#GATE_AUTOR)
Streaming.RequestModel(#GATE_AUTOL)
Streaming.LoadAllModelsNow()
0@ = Object.Create(#GATE_AUTOL, {Pos3:}2497.41, 2777.07, 9.8)
1@ = Object.Create(#GATE_AUTOR, {Pos3:}2497.41, 2769.11, 9.8)
Object.SetHeading(0@, 90.0)
Object.SetHeading(1@, 90.0)
Object.SetDynamic(0@, True)
Object.SetDynamic(1@, True)
Streaming.MarkModelAsNoLongerNeeded(#GATE_AUTOR)
Streaming.MarkModelAsNoLongerNeeded(#GATE_AUTOL)

// Reduce polling rate until player is within a decent range of the gates.
:Script_Universal_ProsperoHQ_Gates_Loop_FarRange
wait 5000
if Char.LocateAnyMeans3D($scplayer, {Pos3:}2497.2947, 2773.2153, 10.8262, {Radius Pos3:}200.0, 200.0, 200.0, {Draw Sphere:}False)
jf @Script_Universal_ProsperoHQ_Gates_Loop_FarRange
Debugger.LogLine({Filename:}logPath, {Timestamp:}True, {Text:}"[PHQGATE] [INFO] Switched to quicker polling rate.")  

// Quicker polling if the player is close to the gates.
:Script_Universal_ProsperoHQ_Gates_Loop_CloseRange
wait 0 // If the player is near the gates,
if Char.LocateAnyMeans3D($scplayer, {Pos3:}2497.2947, 2773.2153, 10.8262, {Radius Pos3:}20.0, 20.0, 20.0, {Draw Sphere:}False)
then // then loop the open command.
    gosub @Script_Universal_ProsperoHQ_Gates_Open
else // If they're not, then check is a follower is active.
    if $flagFollowerActive == True
    then // If they are, then check if the follower is in range of the gate.
        if Char.LocateAnyMeans3D($follower, {Pos3:}2497.2947, 2773.2153, 10.8262, {Radius Pos3:}20.0, 20.0, 20.0, {Draw Sphere:}False)
        then // If they are, then loop the open command.
            gosub @Script_Universal_ProsperoHQ_Gates_Open
        end  
    else // If no follower is active or neither char is in range, then loop the close command.
        gosub @Script_Universal_ProsperoHQ_Gates_Close
    end
end

// Check if the player is still within a decent range of the gates.
if not Char.LocateAnyMeans3D($scplayer, {Pos3:}2497.2947, 2773.2153, 10.8262, {Radius Pos3:}200.0, 200.0, 200.0, {Draw Sphere:}False)
then
    // If they're not, then reduce polling rate again.
    Debugger.LogLine({Filename:}logPath, {Timestamp:}True, {Text:}"[PHQGATE] [INFO] Switched to reduced polling rate.")  
    jump @Script_Universal_ProsperoHQ_Gates_Loop_FarRange
end
// If they are, loop the quicker checks above.
jump @Script_Universal_ProsperoHQ_Gates_Loop_CloseRange

:Script_Universal_ProsperoHQ_Gates_Open
Object.Slide(0@, {From Pos3:}2497.41, 2784.77, 9.8, {Speed Pos3:}0.0, 0.1, 0.0, {Collision Check:}False)
Object.Slide(1@, {From Pos3:}2497.41, 2761.41, 9.8, {Speed Pos3:}0.0, 0.1, 0.0, {Collision Check:}False)
return

:Script_Universal_ProsperoHQ_Gates_Close
Object.Slide(0@, {From Pos3:}2497.41, 2777.07, 9.8, {Speed Pos3:}0.0, 0.1, 0.0, {Collision Check:}False)
Object.Slide(1@, {From Pos3:}2497.41, 2769.11, 9.8, {Speed Pos3:}0.0, 0.1, 0.0, {Collision Check:}False)
return



//------------------------------------------------------------------------------------------------------
//      Universal Scripts | Debug | CameraHelper
//      - A debug tool used to obtain accurate camera angles.
//------------------------------------------------------------------------------------------------------
:Debug_CameraHelper
script_name 'DBGCAML'

while true
    wait 0
    if Pad.TestCheat("[")
    then
        func_runExternalScript(externalCameraHelper, "External-CameraHelper")
    end
end


//------------------------------------------------------------------------------------------------------
//      Universal Scripts | Debug | Debug Console
//      - A debug development console containing useful tools and readouts.
//------------------------------------------------------------------------------------------------------
:Debug_DebugConsole
script_name 'DBGCONL' 

while true
    wait 0
    if Pad.IsKeyPressed(KeyCode.F6)
    then
        while Pad.IsKeyPressed(KeyCode.F6)
            wait 0
        end 
        func_runExternalScript(externalDebugConsole, "External-DebugConsole")
    end
    
    while $flagDebugConsoleOpen == True
        wait 0
    end
    StreamedScript.MarkAsNoLongerNeeded(externalDebugConsole)
end


//========================================================================================================================================================================================================
//      7. Storymode Scripts
//      Scripts that run exclusively in Storymode.
//========================================================================================================================================================================================================

 

//========================================================================================================================================================================================================
//      8. Freemode Scripts
//      Scripts that run exclusively in Freemode.
//========================================================================================================================================================================================================



//========================================================================================================================================================================================================
//      9. Functions
//      Custom functions called extensively to reduce code bloat.
//========================================================================================================================================================================================================

//------------------------------------------------------------------------------------------------------
//      Functions | Run External Script
//      - This function streams an external script, waits for it to be loaded, then starts it safely.
//------------------------------------------------------------------------------------------------------
function func_runExternalScript(targetScript: int, name: string)
    int scriptCount = StreamedScript.GetNumberOfInstances(targetScript)
    if scriptCount == 0
    then
        StreamedScript.Stream(targetScript)
        while not StreamedScript.HasLoaded(targetScript)
            wait 0
        end
        StreamedScript.StartNew(targetScript)
        Debugger.LogLine({Filename:}logPath, {Timestamp:}True, {Text:}"[Main] [INFO] Began external script '%s'.", name)
    else
        Debugger.LogLine({Filename:}logPath, {Timestamp:}True, {Text:}"[Main] [ERROR] Failed to start external script '%s'. Active instances already %i.", name, scriptCount)
    end
end



//------------------------------------------------------------------------------------------------------
//      Functions | Load Model
//      - This function streams a model, waits for it to be loaded, then returns.
//------------------------------------------------------------------------------------------------------
function func_loadModel(modelID: int, forceLoad: int)
    Streaming.RequestModel(modelID)
    if
        forceLoad == 1
    then
        Streaming.LoadAllModelsNow()
        return
    else
        while not Streaming.IsModelAvailable(modelID)
            wait 0
        end
    end
end


//------------------------------------------------------------------------------------------------------
//      Functions | Teleport Player Safely
//      - This function teleports the player safely to the target coordinates, requesting collision beforehand.
//------------------------------------------------------------------------------------------------------
function func_teleportSafe(posX: float, posY: float, heading: float, area: int)
    Streaming.SetAreaVisible(area)
    Char.SetAreaVisible($scplayer, area)
    Char.SetCoordinates($scplayer, posX, posY, 0.0)
    Streaming.RequestCollision(posX, posY)
    Streaming.LoadAllModelsNow()
    wait 0
    
    // put on loaded ground
    Char.SetCoordinates($scplayer, posX, posY, -100.0)
    Char.SetHeading($scplayer, heading)
    
    float posZ
    //Player is already at the waypoint
    Char.GetCoordinates($scplayer, posX, posY, posZ)
    //We're loading the scene
    Streaming.LoadScene(posX, posY, posZ)
    Streaming.LoadAllModelsNow()
end



//------------------------------------------------------------------------------------------------------
//      Functions | Equip Agent Outfit
//      - This function puts CJ in his agent outfit.
//------------------------------------------------------------------------------------------------------
function func_giveAgentOutfit()
    Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"Player_Face",   {Model:}"HEAD",      {Body Part:}BodyPart.Head)
    Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"Tuxedo",        {Model:}"Suit2",     {Body Part:}BodyPart.Torso)
    Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"Suit1TrBlk2",   {Model:}"Suit1Tr",   {Body Part:}BodyPart.Legs)
    Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"ShoeDressBlk",  {Model:}"Shoe",      {Body Part:}BodyPart.Shoes)
    Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"WatchCro2",     {Model:}"Watch",     {Body Part:} 14)
    Player.GiveClothesOutsideShop({Player:} $player1, {Texture:}"Glasses05Dark", {Model:}"Glasses03", {Body Part:}BodyPart.Glasses)
    Player.BuildModel($player1)
end



//------------------------------------------------------------------------------------------------------
//      Functions | Clear Camera Vector
//      - This function clears stubborn camera vector movements.
//------------------------------------------------------------------------------------------------------
function func_clearCameraVector()
    float cameraX, cameraY, cameraZ
    Camera.GetActiveCoordinates(cameraX, cameraY, cameraZ)
    Camera.SetVectorMove(cameraX, cameraY, cameraZ, cameraX, cameraY, cameraZ, 0, False)
    Camera.SetVectorTrack(cameraX, cameraY, cameraZ, cameraX, cameraY, cameraZ, 0, False)
end



//------------------------------------------------------------------------------------------------------
//      Functions | Give Weapon Safely
//      - This function loads the model before giving the weapon to the specified Char.
//------------------------------------------------------------------------------------------------------
function func_giveWeaponSafely(targetChar: Char, modelID: int, weaponID: int, ammo: int)
    Streaming.RequestModel(modelID)
    Streaming.LoadAllModelsNow()
    Char.GiveWeapon(targetChar, weaponID, ammo)
    Char.SetCurrentWeapon(targetChar, weaponID)
    Streaming.MarkModelAsNoLongerNeeded(modelID)
end



//------------------------------------------------------------------------------------------------------
//      Functions | Play SCM Sound Safely
//      - This function safely loads and then plays an SCM sound.
//------------------------------------------------------------------------------------------------------
function func_playSoundSafely(slotID: int, soundID: int, waitUntilFinished: int)
    Audio.LoadMissionAudio(slotID, soundID)
    repeat
        wait 0
    until Audio.HasMissionAudioLoaded(slotID)
    Audio.PlayMissionAudio(slotID)
    
    if waitUntilFinished == False
    then
        return
    else
        repeat
            wait 0
        until Audio.HasMissionAudioFinished(slotID)
    end
end



//------------------------------------------------------------------------------------------------------
//      Functions | Load AudioStream safely.
//      - 
//------------------------------------------------------------------------------------------------------
function func_playAudioStreamSafely(streamID: AudioStream, soundPath: string, waitUntilFinished: int)
    repeat
        wait 0
    until streamID = AudioStream.Load(soundPath)
    AudioStream.SetState(streamID, AudioStreamAction.Play)
    
    if waitUntilFinished == False
    then
        return
    else
        repeat
            wait 0
        until not AudioStream.IsPlaying(streamID)
    end
end



//------------------------------------------------------------------------------------------------------
//      Functions | Play Dialogue
//      - 
//------------------------------------------------------------------------------------------------------
function func_playDialogue(mode: int, asPath: string, scmSoundID: int, subID: string, doAnims: int, forChar: Char, waitUntilFinished: int)
int streamLength = 0
int subtitleDisplayTime = 0
AudioStream streamID

    if mode == 0 // AudioStream mode.
    then
        repeat
            wait 0
        until AudioStream.Load(asPath, streamID)
        AudioStream.GetLength(streamID, streamLength)
        streamLength *= 1000
        //subtitleDisplayTime = streamLength
        //subtitleDisplayTime += 500
        streamLength += 1000
        AudioStream.SetState(streamID, AudioStreamAction.Play)
        Text.PrintNow(subID, streamLength, 1)  
        
        if doAnims == True
        then
            Task.PlayAnim({Char:}forChar, {Anim Name:}"idle_chat", {Anim File:}"ped", {Speed:}4.0, {Loop:}False, {LockX:}False, {LockY:}False, {Freeze Frame:}False, {Duration:}streamLength)
            Char.StartFacialTalk(forChar, 10)
        end
        
        if waitUntilFinished == True
        then
            repeat
                wait 0
            until not AudioStream.IsPlaying(streamID)
            Char.StopFacialTalk(forChar)
        end 
    end
end



//========================================================================================================================================================================================================
//      10. Missions
//      All missions go here. They are only loaded into memory when called.
//========================================================================================================================================================================================================

//------------------------------------------------------------------------------------------------------
//      Missions | Mission 0: Initial
//      - Initialisation 'mission' which has the main menu etc.
//------------------------------------------------------------------------------------------------------
:Mission_Initial
{$INCLUDE_ONCE main\missions\Mission-Initial.txt}

//------------------------------------------------------------------------------------------------------
//      Missions | Mission 1: Introduction
//      - Intro cinematic where the Bloodpool opens and CJ is at the bar.
//------------------------------------------------------------------------------------------------------
:Mission_Introduction
{$INCLUDE_ONCE main\missions\Mission-Introduction.txt}

//------------------------------------------------------------------------------------------------------
//      Missions | Mission 2: Arrival
//      - CJ goes to Prospero H.Q. and is given his first task.
//------------------------------------------------------------------------------------------------------
:Mission_Arrival
{$INCLUDE_ONCE main\missions\Mission-Arrival.txt}

//========================================================================================================================================================================================================
//      11. External Scripts
//      All external scripts go here. They are only loaded into memory when called.
//========================================================================================================================================================================================================

//------------------------------------------------------------------------------------------------------
//      External Scripts | Debug Camera Helper
//      - A debug script used to get accurate camera angles.
//------------------------------------------------------------------------------------------------------
:External_CameraHelper
{$INCLUDE_ONCE main\externals\External-CameraHelper.txt}


//------------------------------------------------------------------------------------------------------
//      External Scripts | Debug Console
//      - A debug developer console containing useful tools and readouts.
//------------------------------------------------------------------------------------------------------
:External_DebugConsole
{$INCLUDE_ONCE main\externals\External-DebugConsole.txt}
