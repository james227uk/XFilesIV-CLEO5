//========================================================================================================================================================================================================
//------------------------------------------------------------------------------------------- GTA X-Files IV (2024) --------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------- By james227uk -------------------------------------------------------------------------------------------
//========================================================================================================================================================================================================
// Name:        TP Network
// Description: This script handles the functionality of the teleport station network around the map.
// Path:        main\externals\External-TPNetwork.txt
// Trigger:     Called by loader script when in range of any active TP station.
//========================================================================================================================================================================================================
script_name 'TPNETWS'
Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Exts|TPNETWS] [INFO] Script started.")
$flag_TPNetwork_Finished = False
Int iCurrentStation = 0
Int iMenuTeleportChoice
Int iValidSelection = False
Int iTeleportSelected = False
Float fStationX, fStationY, fStationZ, fStationH
Float fParticleX, fParticleY, fParticleZ
Menu menuTeleport
Particle fxTPSmoke
AudioStream3D asActive = AudioStream3D.Load("modloader\a X-Files IV\audio\fx\tpnetwork\active.wav")
AudioStream3D asFail   = AudioStream3D.Load("modloader\a X-Files IV\audio\fx\tpnetwork\fail.mp3")
AudioStream3D asLock   = AudioStream3D.Load("modloader\a X-Files IV\audio\fx\tpnetwork\lock.mp3")
AudioStream3D asTravel = AudioStream3D.Load("modloader\a X-Files IV\audio\fx\tpnetwork\travel.mp3")
AudioStream3D asExit   = AudioStream3D.Load("modloader\a X-Files IV\audio\fx\tpnetwork\exit.mp3")
AudioStream3D asClose  = AudioStream3D.Load("modloader\a X-Files IV\audio\fx\tpnetwork\close.mp3")


// Figure out which station the player is at.
while true
    wait 0
    if Char.LocateOnFoot2D($scplayer, 2582.03250, 2836.8716, 2.0, 2.0, False) // Prospero H.Q.
    then iCurrentStation = 1
    end
    if Char.LocateOnFoot2D($scplayer, -2526.1526, -617.1046, 2.0, 2.0, False) // Missionary Hill
    then iCurrentStation = 2
    end
    //   iCurrentStation = 0 if no condition is passed here, meaning undefined/error.
    Break
end

// Initial actions for each station.
Switch iCurrentStation
    Case 0 // Undefined (Error!)
        Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Exts|TPNETWS] [ERROR] Could not determine which station player is at. Are the coordinates correct?")
        Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Exts|TPNETWS] [INFO] Script ending (Reason: Failed to determine current player station).")
        terminate_this_script
        
    Case 1 // Prospero H.Q.
        Camera.SetFixedPosition({Pos3:}2578.2207, 2836.9683, 11.0693, {Rot. Pos3:}0.0, 0.0, 0.0)  // Camera: Behind CJ, framing H.Q. teleporter.
        Camera.PointAtPoint({Pos3:}2579.1279, 2836.5667, 11.1943, SwitchType.Interpolation)
        fParticleX = 2586.3232  
        fParticleY = 2833.0186
        fParticleZ = 11.1093       
        fStationX = 2582.03250
        fStationY = 2836.8716
        fStationZ = 10.8203
             
    Case 2 // Missionary Hill
        fStationX = -2526.1526
        fStationY = -617.1046
        fStationZ = 132.8599
        
end
gosub @External_TPNetwork_SetupAudio
gosub @External_TPNetwork_MainMenu

// Main Loop
while true
    wait 0
    // Check if player wants to re-enter menu.
    if Char.LocateOnFoot3D($scplayer, {Pos3:}fStationX, fStationY, fStationZ, {Rad. Pos3:}1.0, 1.0, 1.0, {Draw Sphere:}True)
    then gosub @External_TPNetwork_MainMenu
    end
    // Check if player has walked into the portal.
    if and
        iValidSelection == True
        Char.LocateOnFoot3D($scplayer, {Pos3:}fParticleX, fParticleY, fParticleZ, {Rad. Pos3:}2.0, 2.0, 2.0, {Draw Sphere:}False)
    then
        gosub @External_TPNetwork_DoTP
        Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Exts|TPNETWS] [INFO] Script ending (Reason: Player has teleported).")
        Break
    end
    // Check if the portal time has run out.
    if TIMERA >= 30000
    then
        Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Exts|TPNETWS] [INFO] Script ending (Reason: Time limit exceeded).")
        gosub @External_TPNetwork_CloseTP
        Break
    end
end
jump @External_TPNetwork_Cleanup



//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//       Functions and Gosubs
//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
:External_TPNetwork_MainMenu
Player.SetControl($player1, False)
menuTeleport = Menu.Create("XTPNM01", {X:}30.0, {Y:}250.0, {Width:}100.0, {Columns:}1, {Interactive:}True, {Background:}True, {Align:}False)
menuTeleport.SetColumn({Column:}0, {Title:}"XTPNM02", {Rows:}"XTPNM03", "XTPNM04", "XTPNM05", "XTPNM06", "DUMMY", "DUMMY", "DUMMY", "DUMMY", "DUMMY", "DUMMY", "DUMMY", "DUMMY")
menuTeleport.SetActiveItem(iMenuTeleportChoice)
while true
    wait 0
    if Pad.IsButtonPressed({Pad:}PadID.Pad1, {Button:}Button.Cross) // Sprint
    then
        iMenuTeleportChoice = Menu.GetItemSelected({Menu:}menuTeleport)
        func_stallMenu(0) // Stall until confirm/sprint key released. 
        
        // Check the player hasn't selected the station they're already at.
        gosub @External_TPNetwork_CheckValidSelection   
        if iValidSelection == False
        then
            AudioStream3D.SetState(asFail, AudioStreamAction.Play)
            Menu.Delete(menuTeleport)
            jump @External_TPNetwork_MainMenu
        else
            // Check if player has cancelled an active TP.
            if iMenuTeleportChoice == 0
            then 
                AudioStream3D.SetState(asActive, AudioStreamAction.Stop)
                AudioStream3D.SetState(asClose, AudioStreamAction.Play)
                Particle.Kill(fxTPSmoke)
                Menu.Delete(menuTeleport)
                terminate_this_script
            else
                // Start the TP process.
                iTeleportSelected = True
                Menu.Delete(menuTeleport)
                AudioStream3D.SetState(asLock, AudioStreamAction.Play)
                wait 1000
                gosub @External_TPNetwork_CreateFX
                AudioStream3D.SetState(asActive, AudioStreamAction.Play)
                AudioStream3D.SetVolume(asActive, 0.0)
                AudioStream3D.SetVolumeWithTransition(asActive, 1.0, 5000)
                AudioStream3D.SetLooped(asActive, True)             
                //jump @External_TPNetwork_EndMenu
                Break
            end
        Break
        end
    end
    if Pad.IsKeyPressed(Keycode.Return)
    then Break
    end     
end
Menu.Delete(menuTeleport)
Player.SetControl($player1, True)
Camera.RestoreJumpcut()
repeat
    wait 0
until not Char.LocateOnFoot3D($scplayer, {Pos3:}fStationX, fStationY, fStationZ, {Rad. Pos3:}2.0, 2.0, 2.0, {Draw Sphere:}False)

if iTeleportSelected == False
then
    $flag_TPNetwork_Finished = True
    Debugger.LogLine({File:}logPath, {Timestamp:}True, {Text:}"[Exts|TPNETWS] [INFO] Script ending (Reason: Menu exited and no destination was selected).")
    jump @External_TPNetwork_Cleanup
end
return


:External_TPNetwork_CreateFX
fxTPSmoke = Particle.Create("CARWASHSPRAY", {Pos3:}fParticleX, fParticleY, fParticleZ, True)
fxTPSmoke.Play()
return


:External_TPNetwork_CheckValidSelection
if iMenuTeleportChoice == 0
then
    Text.PrintNow("XTPNM22", 2000, 2) // XTPNM22 SYSTEM INFO: Powering down.
    return
end

if iMenuTeleportChoice == iCurrentStation
then
    iValidSelection = False
    Text.PrintNow("XTPNM20", 2000, 2) // XTPNM20 SYSTEM FAIL: Cannot teleport to same station.
    return
else
    if $flag_Debug_TPNetwork_BypassValidCheck == True
    then jump @External_TPNetwork_CheckValidSelection_Valid
    end
    
    Switch iMenuTeleportChoice
        Case 0
        
        Case 1 // Prospero H.Q.
            if $flag_ProsperoHQ_TPHubEnabled == True
            then jump @External_TPNetwork_CheckValidSelection_Valid
            end
        
        Case 2 // Missionary Hill
            if $flagFacilityMissionaryHillPurchased == True
            then jump @External_TPNetwork_CheckValidSelection_Valid
            end
    end
    Text.PrintNow("XTPNM23", 2000, 2) // XTPNM23 SYSTEM FAIL: Destination not available.
end
return

           
                     

:External_TPNetwork_CheckValidSelection_Valid
iValidSelection = True
Text.PrintNow("XTPNM21", 2000, 2) // XTPNM21 SYSTEM SUCCESS: Activating...
TIMERA = 0
return


:External_TPNetwork_DoTP
AudioStream3D.SetState(asTravel, AudioStreamAction.Play)
AudioStream3D.SetState(asActive, AudioStreamAction.Stop)
Camera.SetFadingColor(255, 255, 255)
Camera.DoFade(2000, Fade.Out)
while Camera.GetFadingStatus()
    wait 0
end
Particle.Kill(fxTPSmoke)

Switch iMenuTeleportChoice
    Case 1 // Prospero H.Q.
        fParticleX = 2586.3625
        fParticleY = 2833.0674
        fParticleZ = 11.1093
        fStationH = 90.0
        iValidSelection = True // Reusing variable, determines if target TP is roofed.
    
    Case 2 // Missionary Hill
        fParticleX = -2529.7866 
        fParticleY = -613.7792 
        fParticleZ = 132.8599
        fStationH = 270.0
        iValidSelection = False // Reusing variable, determines if target TP is roofed.
end

gosub @External_TPNetwork_SetupAudio
gosub @External_TPNetwork_CreateFX
if iValidSelection == True
then gosub @External_TPNetwork_TPToRoofedArea
else func_teleportSafe({Pos2:}fParticleX, fParticleY, {Heading:}fStationH, {Area:}0)
end
wait 2000
AudioStream3D.SetState(asActive, AudioStreamAction.Play)
AudioStream3D.SetVolume(asActive, 0.0)
AudioStream3D.SetVolumeWithTransition(asActive, 1.0, 2000)
AudioStream3D.SetState(asExit, AudioStreamAction.Play)
Camera.DoFade(2000, Fade.In)
while Camera.GetFadingStatus()
    wait 0
end
Camera.SetFadingColor(0, 0, 0)
wait 2000
gosub @External_TPNetwork_CloseTP
return


// Special version of the TP Safe function but for roofed areas.
:External_TPNetwork_TPToRoofedArea
Char.SetCoordinates($scplayer, fParticleX, fParticleY, fParticleZ)
Streaming.RequestCollision(fParticleX, fParticleY)
Streaming.LoadAllModelsNow()
wait 0
Char.SetCoordinates($scplayer, fParticleX, fParticleY, fParticleZ)
Char.SetHeading($scplayer, fStationH)
Streaming.LoadScene(fParticleX, fParticleY, fParticleZ)
Streaming.LoadAllModelsNow()
return


// Ends the TP effects and handles the sounds.
:External_TPNetwork_CloseTP
Particle.Kill(fxTPSmoke)
AudioStream3D.SetState(asActive, AudioStreamAction.Stop)
AudioStream3D.SetState(asClose, AudioStreamAction.Play)
repeat
    wait 0
until not AudioStream3D.IsPlaying(asClose)
return


// Sets AudioStream emitter locations and size.
:External_TPNetwork_SetupAudio
AudioStream3D.SetPlayAtCoords(asActive, fParticleX, fParticleY, fParticleZ)
AudioStream3D.SetPlayAtCoords(asFail, fParticleX, fParticleY, fParticleZ)
AudioStream3D.SetPlayAtCoords(asLock, fParticleX, fParticleY, fParticleZ)
AudioStream3D.SetPlayAtCoords(asTravel, fParticleX, fParticleY, fParticleZ)
AudioStream3D.SetPlayAtCoords(asExit, fParticleX, fParticleY, fParticleZ)
AudioStream3D.SetPlayAtCoords(asClose, fParticleX, fParticleY, fParticleZ)
AudioStream3D.SetSourceSize(asActive, 20.0)
AudioStream3D.SetSourceSize(asFail, 20.0)
AudioStream3D.SetSourceSize(asLock, 20.0)
AudioStream3D.SetSourceSize(asTravel, 20.0)
AudioStream3D.SetSourceSize(asExit, 20.0)
AudioStream3D.SetSourceSize(asClose, 20.0)
return


:External_TPNetwork_Cleanup
AudioStream3D.Remove(asActive)
AudioStream3D.Remove(asFail)
AudioStream3D.Remove(asLock)
AudioStream3D.Remove(asTravel)
AudioStream3D.Remove(asExit)
AudioStream3D.Remove(asClose)
Player.SetControl($player1, True)
$flag_TPNetwork_Finished = True
terminate_this_script